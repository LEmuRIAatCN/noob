<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">
    <dubbo:application name="consumer" logger="slf4j"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181" id="r1"/>
    <!--<dubbo:registry address="zookeeper://127.0.0.1:2181" id="r2"/>-->
    <dubbo:protocol name="dubbo" port="20880"/>
    <!-- noob start -->
    <!-- 消费者-->
    <bean id="resolverC" class="com.lemuria.noob.client.NOOBClientAnnotationResolver"/>
    <bean id="invoker" class="com.lemuria.noob.client.NOOBClientInvoker">
        <property name="noobClientAnnotationResolver" ref="resolverC"/>
    </bean>
    <!-- noob end-->
    <dubbo:reference id="consumerDemo" interface="com.lemuria.noob.demo.api.Demo" check="false"/>
    <!-- 提供方实现了异步服务，消费者这里同步调用?-->
    <dubbo:reference id="asyncDemo" interface="com.lemuria.noob.demo.api.AsyncDemo" check="false" />
    <!-- 异步消费，异步调用 -->
    <dubbo:reference id="asyncConsume" interface="com.lemuria.noob.demo.api.AsyncDemo"  check="false" async="true"/>
</beans>